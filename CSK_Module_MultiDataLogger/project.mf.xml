<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<manifest>
    <application name="CSK_Module_MultiDataLogger">
        <crown name="CSK_Module_MultiDataLogger">
            <desc>This is an automatically generated CROWN (description not necessary).</desc>
        </crown>
        <crown name="CSK_MultiDataLogger">
            <trait>released</trait>
            <desc>Module to store / log data like files or images. +
{empty} +
Typically, the feature of this module is used like this (check also main script of this module): +
{empty} +
**1) Setup** +
- Set instance to configure via 'setSelectedInstance' +
- Set data mode and storage path via 'setDataMode' and 'setPath'. +
- Set type of data or image via 'setDataType' or 'setImageType'. +
- If it should store data in a CSV-formatted file, you should set the CSV filename via 'setCSVFilename', the CSV labels via 'setCSVLabels'. Additionally, choose mode for 'setSaveOnlyChanges' and 'setSaveDataDirectly'. +
- Set an event to receive the data / image to store via 'setRegisterEvent'. This event should provide as first parameter the data to store and as second parameter an optional filename (2nd parameter not needed, if data type is 'csv'). Otherwise, it will use the timestamp as filename. +</desc>
            <enum name="DataMode" trait="released">
                <desc>Mode of data to store.</desc>
                <item desc="Store files" name="file">file</item>
                <item desc="Store images" name="image">image</item>
            </enum>
            <enum name="DataType" trait="released">
                <desc>Data type</desc>
                <item desc="JSON" name="json">json</item>
                <item desc="CSV" name="csv">csv</item>
            </enum>
            <enum name="ImageFormat" trait="released">
                <desc>Image format</desc>
                <item desc="BMP" name="bmp">bmp</item>
                <item desc="PNG" name="png">png</item>
                <item desc="JPEG" name="jpg">jpg</item>
                <item desc="JSON" name="json">json</item>
                <item desc="MSGPACK" name="msgpack">msgpack</item>
            </enum>
            <serves>
                <event name="OnNewStatusLoadParameterOnReboot">
                    <desc>Notify status if parameters should be loaded on app/device boot up.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnPersistentDataModuleAvailable">
                    <desc>Notify status if features of CSK_PersistentData module are available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewInstanceList">
                    <desc>Event to provide list of created instances.</desc>
                    <param desc="List of created instances." multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewProcessingParameter">
                    <desc>Event to share processing parameters to the instances.</desc>
                    <param desc="Numeric identifier of the instance to receive the parameter." multiplicity="1" name="objectNo" type="int"/>
                    <param desc="Name of the parameter." multiplicity="1" name="parameter" type="string"/>
                    <param desc="Value of the parameter." multiplicity="1" name="value" type="auto"/>
                    <param desc="Numeric identifier, if parameter is for specific internal used object." multiplicity="?" name="internalObjectNo" type="int"/>
                </event>
                <event name="OnNewSelectedInstance">
                    <desc>Notify if new instance is selected.</desc>
                    <param desc="Selected instance." multiplicity="1" name="selectedObject" type="int"/>
                </event>
                <event name="OnDataLoadedOnReboot">
                    <desc>Event to call if module tried to load parameters and should be ready.</desc>
                </event>
                <event name="OnNewParameterName">
                    <desc>Notify name of persistent data parameter.</desc>
                    <param desc="Parameter name" multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnUserLevelOperatorActive">
                    <desc>Status of Operator userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelMaintenanceActive">
                    <desc>Status of Maintenance userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelServiceActive">
                    <desc>Status of Service userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelAdminActive">
                    <desc>Status of Admin userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewValueUpdateNUM">
                    <desc>Example of dynamically created event to sync parameters between instance threads and Controller part of module. +
NUM will be replaced by the number of instance (e.g. "OnNewValueUpdate1"). +</desc>
                    <param desc="Instance new value is coming from." multiplicity="1" name="instance" type="int"/>
                    <param desc="Name of the parameter to update/sync." multiplicity="1" name="parameter" type="string"/>
                    <param desc="Value to update." multiplicity="1" name="value" type="auto"/>
                    <param desc="Optionally if internal parameter should be used for internal objects." multiplicity="?" name="selectedObject" type="int"/>
                </event>
                <event name="OnNewValueToForwardNUM">
                    <desc>Example of dynamically created event to forward data from instance thread to Controller part of module, e.g. to forward values to UI. +
NUM will be replaced by the number of instance (e.g. "OnNewValueToForward1"). +</desc>
                    <param desc="Eventname to use to forward value." multiplicity="1" name="eventname" type="string"/>
                    <param desc="Value to forward." multiplicity="1" name="value" type="auto"/>
                </event>
                <event name="OnNewResult">
                    <desc>Generic event to notify results. E.g. to forward results from single instances.</desc>
                    <param desc="Result" multiplicity="1" name="result" type="bool"/>
                </event>
                <event name="OnNewStatusRegisteredEvent">
                    <desc>Notify event instance is registered to receive data to process.</desc>
                    <param desc="Name of event." multiplicity="1" name="eventname" type="string"/>
                </event>
                <event name="OnNewStatusStoragePath">
                    <desc>Notify path to store incoming data</desc>
                    <param desc="Storage path." multiplicity="1" name="path" type="string"/>
                </event>
                <event name="OnNewStatusDataMode">
                    <desc>Notify mode of data storage</desc>
                    <param desc="Data mode." multiplicity="1" name="mode" type="string"/>
                </event>
                <event name="OnNewStatusDataType">
                    <desc>Notfiy data type.</desc>
                    <param desc="Data type" multiplicity="1" name="type" type="string"/>
                </event>
                <event name="OnNewStatusImageType">
                    <desc>Notify image type.</desc>
                    <param desc="Type of image" multiplicity="1" name="imageType" type="string"/>
                </event>
                <event name="OnNewStatusImageCompressionValue">
                    <desc>Notify value of image compression.</desc>
                    <param desc="Image compression value." multiplicity="1" name="imgCompression" type="int"/>
                </event>
                <event name="OnNewStatusCSVLables">
                    <desc>Notify CSV labels.</desc>
                    <param desc="CSV labels." multiplicity="1" name="labels" type="string"/>
                </event>
                <event name="OnNewStatusSaveOnlyChanges">
                    <desc>Notify status if log file should log received data only if it differs from previous data.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusSaveDataDirectly">
                    <desc>Notify status if log file should be saved automatically as soon as it receives a new data entry.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusCSVFilename">
                    <desc>Notify name of CSV file to store data.</desc>
                    <param desc="Name of file." multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnNewStatusAvailableEvents">
                    <desc>Notify available events.</desc>
                    <param desc="JSON list" multiplicity="1" name="listOfEvents" type="string"/>
                </event>
                <event name="OnNewStatusFlowConfigPriority">
                    <desc>Notify if FlowConfig should have priority for FlowConfig relevant configurations.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusCSKStyle">
                    <desc>Notify UI style to use for CSK modules.</desc>
                    <param desc="UI style" multiplicity="1" name="theme" type="string"/>
                </event>
                <event name="OnNewStatusModuleIsActive">
                    <desc>Notify if module can be used on device.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusModuleVersion">
                    <desc>Notify version of module.</desc>
                    <param desc="Version" multiplicity="1" name="version" type="string"/>
                </event>
                <event name="OnNewStatusLimitCSVEntries">
                    <desc>Notify status if CSV entries are limited.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusCSVLimitAmount">
                    <desc>Notify limit of entries in CSV file.</desc>
                    <param desc="Limit of CSV entries." multiplicity="1" name="limit" type="int"/>
                </event>
                <function name="setParameterName">
                    <desc>Function to set the name of the parameters if saved/loaded via the CSK_PersistentData module.</desc>
                    <param desc="Name of the parameter" multiplicity="1" name="name" type="string"/>
                </function>
                <function name="setLoadOnReboot">
                    <desc>Configure if this module should load its saved parameters at app / device boot up.</desc>
                    <param desc="Set status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="pageCalled">
                    <desc>Function to register "OnResume" of the module UI (only as helper function).</desc>
                    <return desc="Empty string (only needed to simplify binding)." multiplicity="1" name="empty" type="string"/>
                </function>
                <function name="setSelectedInstance">
                    <desc>Select one of the multiple instances.</desc>
                    <param desc="Instance to select." multiplicity="1" name="instance" type="int"/>
                </function>
                <function name="getInstancesAmount">
                    <desc>Get the amount of created instances of this module.</desc>
                    <return desc="Amount of created instances." multiplicity="1" name="amount" type="int"/>
                </function>
                <function name="setRegisterEvent">
                    <desc>Configure event that this module should listen to. If this one is notified, it will be linked to internal processing function. +
(Will be set to currently active instance, see "setSelectedObject")</desc>
                    <param desc="(external) Event name to listen to." multiplicity="1" name="event" type="string"/>
                </function>
                <function name="addInstance">
                    <desc>Function to add an additional instance.</desc>
                </function>
                <function name="resetInstances">
                    <desc>Function to reset instances to one single instance. +
IMPORTANT: As instances start their own threads, the module needs to be restarted if new instances are needed... (see AppEngine docu for "Script.startScript").</desc>
                </function>
                <function name="setPath">
                    <desc>Function to set storage path.</desc>
                    <param desc="Storage path for incoming data." multiplicity="1" name="path" type="string"/>
                </function>
                <function name="setDataMode">
                    <desc>Function to set data mode.</desc>
                    <param desc="Data mode." multiplicity="1" name="mode" ref="CSK_MultiDataLogger.DataMode" type="enum"/>
                </function>
                <function name="setDataType">
                    <desc>Function to set data type.</desc>
                    <param desc="Data type." multiplicity="1" name="dataType" type="enum"/>
                </function>
                <function name="setImageType">
                    <desc>Function to set image type.</desc>
                    <param desc="Image type" multiplicity="1" name="imgType" type="string"/>
                </function>
                <function name="setCompressionValue">
                    <desc>Function to set image compression value</desc>
                    <param desc="Image compression value." multiplicity="1" name="value" type="int"/>
                </function>
                <function name="setCSVLabels">
                    <desc>Function to set CSV labels.</desc>
                    <param desc="CSV labels seperated by comma." multiplicity="1" name="labels" type="string"/>
                </function>
                <function name="setSaveOnlyChanges">
                    <desc>Set to TRUE if data should be logged only if value changed. +</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setSaveDataDirectly">
                    <desc>Set if data should be saved persistently with every new received data. +
If FALSE it is needed to call 'saveLog' manually to store log data.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setCSVFilename">
                    <desc>Function to set CSV filename.</desc>
                    <param desc="Filename" multiplicity="1" name="name" type="string"/>
                </function>
                <function name="saveCSVFile">
                    <desc>Function to manually save CSV file.</desc>
                </function>
                <function name="sendParameters">
                    <desc>Send parameters to CSK_PersistentData module if possible to save them.</desc>
                    <param desc="[Optional] Set to TRUE if the data should NOT be saved immediately after sending." multiplicity="?" name="noDataSave" type="bool"/>
                </function>
                <function name="setFlowConfigPriority">
                    <desc>Function to configure if FlowConfig should have priority for FlowConfig relevant configuration.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="clearFlowConfigRelevantConfiguration">
                    <desc>Function to clear FlowConfig relevant configurations.</desc>
                </function>
                <function name="getStatusModuleActive">
                    <desc>Function to get status if module is active.</desc>
                    <return desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="loadParameters">
                    <desc>Load parameters for this module from the CSK_PersistentData module if possible and use them.</desc>
                    <return desc="Success to load parameters." multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="getParameters">
                    <trait>released</trait>
                    <desc>Function to get all parameters of the client in JSON format.</desc>
                    <param desc="Number of instance to get parameters from." multiplicity="1" name="instanceNo" type="int"/>
                    <return desc="JSON string with all parameters." multiplicity="1" name="jsonParameters" type="string"/>
                </function>
                <function name="resetModule">
                    <desc>Function to reset main configuration of module.</desc>
                </function>
                <function name="setCSVLimit">
                    <desc>Function to set status if CSV entries should be limited.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setCSVLimitAmount">
                    <desc>Function to set maximum amount of CSV entries if it is limited.</desc>
                    <param desc="Amount of maximum CSV entries." multiplicity="1" name="amount" type="int"/>
                </function>
            </serves>
        </crown>
        <crown name="MultiDataLogger_FC">
            <trait>released</trait>
            <desc>Crown to provide CSK_FlowConfig relevant features.</desc>
            <serves/>
            <crown name="DataSource">
                <desc>Set source of data to log.</desc>
                <serves>
                    <function name="create">
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param constraint="1-99" desc="Numeric identifier of processing instance." multiplicity="1" name="Instance" type="int"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="dataSource">
                        <include>data-flow</include>
                        <desc>Set source of data to log.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Source of data to log.&#10;&#10;Parameter:&#10;1: Data (STRING or Image)" multiplicity="1" name="source" type="string"/>
                    </function>
                </serves>
            </crown>
        </crown>
        <meta key="author">SICK AG</meta>
        <meta key="version">2.1.0</meta>
        <meta key="priority">low</meta>
        <meta key="copy-protected">false</meta>
        <meta key="read-protected">false</meta>
        <meta key="crown2-flow-engine">false</meta>
        <meta key="LuaLoadAllEngineAPI">false</meta>
        <entry default="CSK_Module_MultiDataLogger.lua" path="scripts"/>
    </application>
</manifest>
